// ===== index.js =====
import React from "react";
import ReactDOM from "react-dom/client";
import { Provider, useDispatch, useSelector } from "react-redux";
import { configureStore, createSlice } from "@reduxjs/toolkit";
import "./index.css";

// --- Redux Slice for Cart ---
const cartSlice = createSlice({
  name: "cart",
  initialState: { items: [] },
  reducers: {
    addItem: (state, action) => {
      const existing = state.items.find((item) => item.id === action.payload.id);
      if (existing) {
        existing.quantity += 1;
      } else {
        state.items.push({ ...action.payload, quantity: 1 });
      }
    },
    removeItem: (state, action) => {
      state.items = state.items.filter((item) => item.id !== action.payload);
    },
    updateQuantity: (state, action) => {
      const { id, quantity } = action.payload;
      const item = state.items.find((i) => i.id === id);
      if (item && quantity > 0) item.quantity = quantity;
    },
  },
});

const store = configureStore({ reducer: { cart: cartSlice.reducer } });
const { addItem, removeItem, updateQuantity } = cartSlice.actions;

// --- React Components ---
function ProductList() {
  const dispatch = useDispatch();
  const products = [
    { id: 1, name: "Laptop", price: 70000 },
    { id: 2, name: "Headphones", price: 2000 },
    { id: 3, name: "Keyboard", price: 1500 },
  ];

  return (
    <div>
      <h2>üõçÔ∏è Products</h2>
      {products.map((p) => (
        <div key={p.id} style={{ marginBottom: "10px" }}>
          <b>{p.name}</b> - ‚Çπ{p.price}
          <button onClick={() => dispatch(addItem(p))} style={{ marginLeft: "10px" }}>
            Add to Cart
          </button>
        </div>
      ))}
    </div>
  );
}

function Cart() {
  const dispatch = useDispatch();
  const cartItems = useSelector((state) => state.cart.items);

  const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);

  return (
    <div style={{ marginTop: "20px" }}>
      <h2>üõí Shopping Cart</h2>
      {cartItems.length === 0 ? (
        <p>Cart is empty</p>
      ) : (
        cartItems.map((item) => (
          <div key={item.id} style={{ marginBottom: "10px" }}>
            <b>{item.name}</b> - ‚Çπ{item.price} x{" "}
            <input
              type="number"
              min="1"
              value={item.quantity}
              onChange={(e) =>
                dispatch(updateQuantity({ id: item.id, quantity: Number(e.target.value) }))
              }
              style={{ width: "50px" }}
            />
            <button
              onClick={() => dispatch(removeItem(item.id))}
              style={{ marginLeft: "10px" }}
            >
              Remove
            </button>
          </div>
        ))
      )}
      <h3>Total: ‚Çπ{total}</h3>
    </div>
  );
}

function App() {
  return (
    <div style={{ padding: "20px", fontFamily: "Arial" }}>
      <h1>üß∫ Redux Toolkit Shopping Cart</h1>
      <ProductList />
      <Cart />
    </div>
  );
}

const root = ReactDOM.createRoot(document.getElementById("root"));
root.render(
  <Provider store={store}>
    <App />
  </Provider>
);
