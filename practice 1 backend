const express = require('express');
const app = express();
const PORT = 3000;

// ========== Logger Middleware ==========
app.use((req, res, next) => {
  const currentTime = new Date().toISOString();
  console.log(`[${currentTime}] ${req.method} ${req.url}`);
  next();
});

// ========== Auth Middleware ==========
const authMiddleware = (req, res, next) => {
  const authHeader = req.headers['authorization'];

  if (!authHeader) {
    return res.status(401).json({ message: 'Authorization header missing' });
  }

  const token = authHeader.split(' ')[1]; // Extract token after 'Bearer'

  if (token !== 'mysecrettoken') {
    return res.status(403).json({ message: 'Invalid or missing token' });
  }

  next(); // Continue if token is valid
};

// ========== Public Route ==========
app.get('/public', (req, res) => {
  res.json({ message: 'Welcome to the Public Route! No authentication needed.' });
});

// ========== Protected Route ==========
app.get('/protected', authMiddleware, (req, res) => {
  res.json({ message: 'Access granted to Protected Route!' });
});

// ========== Start Server ==========
app.listen(PORT, () => {
  console.log(`âœ… Server running on http://localhost:${PORT}`);
});
